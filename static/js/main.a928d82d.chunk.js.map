{"version":3,"sources":["static/images/user-icon.png","context/mockData.js","components/helpers.js","context/MyContext.jsx","components/DialogSection.jsx","components/getApiAnswerMessage.js","components/FavouriteSection.jsx","components/UsersChatList.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","mockData","user","messages","author","text","time","id","generateUniqueId","name","arguments","length","undefined","performance","now","toString","Math","random","replace","lastMessageInArray","arr","getCurrentTime","Date","dateTimeChatListFormatt","date","concat","slice","ChatContext","createContext","MyContext","props","chatData","JSON","parse","window","localStorage","getItem","writeToLocalStorage","dataFile","setItem","stringify","sort","a","b","_useState","useState","_useState2","Object","slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","setNewMessageState","dataValue","addNewChatMessage","message","sendTime","uid","messageAuthor","map","_ref","newUserMessage","push","react_default","createElement","Provider","value","children","DialogSection","data","useContext","setMessage","UserChatHistory","key","className","_ref2","substring","onClick","class","src","userLogo","alt","onChange","e","target","placeholder","newMessage","trim","setTimeout","activeUser","fetch","then","response","status","json","Error","userResponseMessage","catch","error","console","Favourites","searchMessage","setSearchMessage","onSearchChangeHandler","val","document","querySelectorAll","forEach","item","str","pos","len","elem","childNodes","showElem","classList","remove","innerHTML","innerText","toLowerCase","search","add","userIcon","htmlFor","type","UsersChatList","currentTarget","parentNode","li","toUpperCase","App","FavouriteSection_Favourites","DialogSection_DialogSection","UsersChatList_UsersChatList","ReactDOM","createRoot","getElementById","render","StrictMode","context_MyContext","src_App_0"],"mappings":"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","file":"static/js/main.a928d82d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-icon.6f6bbb16.png\";","export const mockData = [\n  {\n    user: 'eva',\n    messages: [\n      {\n        author: 'eva',\n        text: 'hello mr. Smith',\n        time:\n          'Thu Jul 14 2022 18:05:00 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5ann4evaGW24evaas'\n      },\n      {\n        author: 'me',\n        text: 'Hi Eva, how are you ?',\n        time:\n          'Thu Jul 14 2022 18:15:00 GMT+0300 (Восточная Европа, летнее время)',\n        id: '545vSuevan'\n      },\n      {\n        author: 'eva',\n        text: \"Let's talk by the phone\",\n        time:\n          'Thu Jul 14 2022 23:02:00 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5evaannW24as'\n      }\n    ]\n  },\n  {\n    user: 'mike',\n    messages: [\n      {\n        author: 'mike',\n        text: 'Hi Smith',\n        time:\n          'Wed Mar 02 2022 18:42:12 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '51231am5454as'\n      },\n      {\n        author: 'me',\n        text: 'Hi mike',\n        time:\n          'Wed Mar 02 2022 19:30:30 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '54245am5454as'\n      },\n      {\n        author: 'mike',\n        text: 'Hi asdsad asd',\n        time:\n          'Wed Mar 02 2022 19:32:28 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '54456am5454as'\n      },\n      {\n        author: 'me',\n        text: 'Hi aasdwad',\n        time:\n          'Fri Mar 04 2022 15:09:58 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '5451ijes45601am5454as'\n      },\n      {\n        author: 'mike',\n        text: 'Hi Aad DWD wDW',\n        time:\n          'Fri Mar 04 2022 15:31:38 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '5451i78954as'\n      },\n      {\n        author: 'me',\n        text: 'Hi 12313421 214',\n        time:\n          'Mon Mar 19 2022 06:51:25 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '5451789as'\n      },\n      {\n        author: 'mike',\n        text: '123w e12ewq , Smith',\n        time:\n          'Mon Mar 19 2022 08:43:50 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '5451i1566454as'\n      },\n      {\n        author: 'me',\n        text: 'Hi3423  5651256',\n        time:\n          'Wed Mar 23 2022 18:23:00 GMT+0200 (Восточная Европа, стандартное время)',\n        id: '5456511m5454as'\n      }\n    ]\n  },\n  {\n    user: 'jessica',\n    messages: [\n      {\n        author: 'jessica',\n        text: 'good morning Smith',\n        time:\n          'Mon May 30 2022 09:15:58 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5451ijes01am5454as'\n      },\n      {\n        author: 'me',\n        text: 'good morning jessica',\n        time:\n          'Mon May 30 2022 11:10:05 GMT+0300 (Восточная Европа, летнее время)',\n        id: '545mejes1iam5454as'\n      }\n    ]\n  },\n  {\n    user: 'malcolm',\n    messages: [\n      {\n        author: 'malcolm',\n        text: 'hello Smith',\n        time:\n          'Thu Apr 12 2022 21:56:08 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5451iam5454as'\n      },\n      {\n        author: 'me',\n        text: 'Hi malcolm',\n        time:\n          'Thu Apr 12 2022 22:36:48 GMT+0300 (Восточная Европа, летнее время)',\n        id: '545malc995454as'\n      }\n    ]\n  },\n  {\n    user: 'ann',\n    messages: [\n      {\n        author: 'ann',\n        text: 'hello Smith',\n        time:\n          'Tue Jun 18 2022 11:43:18 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5ann45SGW24as'\n      },\n      {\n        author: 'me',\n        text: 'Hi Ann',\n        time:\n          'Tue Jun 18 2022 11:55:48 GMT+0300 (Восточная Европа, летнее время)',\n        id: '545vSuasann'\n      },\n      {\n        author: 'ann',\n        text: \"Let's talk by the phone\",\n        time:\n          'Tue Jun 18 2022 12:03:31 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5ann0SGannW24as'\n      }\n    ]\n  },\n  {\n    user: 'diana',\n    messages: [\n      {\n        author: 'diana',\n        text: 'Hey Smith',\n        time:\n          'Tue Jun 07 2022 06:12:40 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5123011am5454as1'\n      },\n      {\n        author: 'me',\n        text: 'Hey Diana',\n        time:\n          'Tue Jun 07 2022 06:52:48 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5123021am5454as2'\n      },\n      {\n        author: 'diana',\n        text: 'may i ask some question',\n        time:\n          'Tue Jun 07 2022 07:30:10 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5123103am5454as3'\n      },\n      {\n        author: 'me',\n        text: 'Hey, feel free to ask any kind of questions...',\n        time:\n          'Tue Jun 07 2022 07:42:18 GMT+0300 (Восточная Европа, летнее время)',\n        id: '51231a04m5454as4'\n      },\n      {\n        author: 'diana',\n        text: 'Hey in 2022 Smith',\n        time:\n          'Tue Aug 16 2022 10:30:18 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5123105am5454as'\n      },\n      {\n        author: 'me',\n        text: 'let go for a walk, Diana',\n        time:\n          'Tue Aug 16 2022 11:12:40 GMT+0300 (Восточная Европа, летнее время)',\n        id: '5123106am5454as'\n      }\n    ]\n  }\n];\n","export const generateUniqueId = (name = '') =>\r\n  (performance.now().toString(36) + Math.random().toString(36)).replace(\r\n    /\\./g,\r\n    name\r\n  );\r\n\r\nexport const lastMessageInArray = (arr) => arr[arr.length - 1];\r\n\r\nexport const getCurrentTime = () => new Date().toString();\r\n\r\nexport const dateTimeMessageFormatt = (date) =>\r\n  `${date.substring(4, 7)}/${date.substring(8, 10)}/${date.substring(13, 24)}`;\r\n\r\nexport const dateTimeChatListFormatt = (date) =>\r\n  `${date.slice(4, 10)},${date.slice(11, 15)}`;\r\n\r\nexport const insertMarkText = (str, pos, len) =>\r\n  str.slice(0, pos) +\r\n  '<mark>' +\r\n  str.slice(pos, pos + len) +\r\n  '</mark>' +\r\n  str.slice(pos + len);\r\n\r\nexport const upperCaseFirstLetter = (str) =>\r\n  str[0].toUpperCase() + str.slice(1);\r\n","import React, { useState, createContext } from 'react';\nimport { mockData } from './mockData';\nimport { lastMessageInArray } from '../components/helpers';\n\nexport const ChatContext = createContext(mockData);\n\nconst MyContext = (props) => {\n  const chatData =\n    JSON.parse(window.localStorage.getItem('mockData')) || mockData;\n\n  const writeToLocalStorage = (dataFile) =>\n    window.localStorage.setItem('mockData', JSON.stringify(dataFile));\n\n  chatData.sort(\n    (a, b) =>\n      Date.parse(lastMessageInArray(b.messages).time) -\n      Date.parse(lastMessageInArray(a.messages).time)\n  );\n\n  writeToLocalStorage(chatData);\n\n  const [currentUser, setCurrentUser] = useState('');\n  const [newChatMessage, setNewMessageState] = useState('');\n\n  const addNewChatMessage = (message, sendTime, uid, messageAuthor = 'me') =>\n    chatData.map(({ user, messages }) => {\n      if (user === currentUser) {\n        const newUserMessage = {\n          author: messageAuthor,\n          text: message,\n          time: sendTime,\n          id: uid\n        };\n        messages.push(newUserMessage);\n        setNewMessageState(message);\n        writeToLocalStorage(chatData);\n      }\n    });\n\n  const dataValue = {\n    chatData,\n    currentUser,\n    setCurrentUser,\n    addNewChatMessage,\n    setNewMessageState\n  };\n\n  return (\n    <ChatContext.Provider value={dataValue}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n\nexport default MyContext;\n","import React, { useState, useContext } from 'react';\r\nimport { ChatContext } from '../context/MyContext';\r\nimport { getApiAnswerMessage } from './getApiAnswerMessage';\r\nimport {\r\n  generateUniqueId,\r\n  getCurrentTime,\r\n  dateTimeMessageFormatt,\r\n  dateTimeChatListFormatt\r\n} from './helpers.js';\r\n\r\nimport userLogo from '../static/images/user-icon.png';\r\n\r\nexport const DialogSection = () => {\r\n  const data = useContext(ChatContext);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const onChangeHandler = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    const newMessage = message.trim();\r\n    if (!newMessage) return;\r\n    data.addNewChatMessage(newMessage, getCurrentTime(), generateUniqueId());\r\n    setTimeout(\r\n      () => getApiAnswerMessage(data.currentUser, data.addNewChatMessage),\r\n      10000\r\n    );\r\n    setMessage('');\r\n  };\r\n\r\n  const UserChatHistory = () =>\r\n    data.chatData.map(({ user, messages }) =>\r\n      user === data.currentUser ? (\r\n        <div key={user}>\r\n          <p className='message-date'>\r\n            {dateTimeChatListFormatt(messages[0].time)}\r\n          </p>\r\n          {messages.map(({ author, text, time, id }) => (\r\n            <div key={id} className='message'>\r\n              <p className={author === 'me' ? 'align_right' : 'align_left'}>\r\n                {text} <span>{dateTimeMessageFormatt(time)}</span>\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null\r\n    );\r\n\r\n  return (\r\n    <div className='dialogs'>\r\n      <section className='dialogs__header'>\r\n        <button className='back-btn' onClick={() => data.setCurrentUser('')}>\r\n          <span class='material-symbols-rounded'>arrow_back</span>\r\n        </button>\r\n        <div className='active-user'>\r\n          <img src={userLogo} alt='active user icon' />\r\n          <span className='capitalize'>{data.currentUser}</span>\r\n        </div>\r\n      </section>\r\n      <section className='dialogs__dialogs'>\r\n        <UserChatHistory />\r\n      </section>\r\n      <section className='dialogs__input-section'>\r\n        <input\r\n          value={message}\r\n          onChange={onChangeHandler}\r\n          placeholder='write a message'\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import { generateUniqueId, getCurrentTime } from './helpers.js';\r\n\r\nexport const getApiAnswerMessage = (activeUser, addNewChatMessage) => {\r\n  fetch('https://api.chucknorris.io/jokes/random')\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      } else {\r\n        throw new Error('Что-то пошло не так на API сервере.');\r\n      }\r\n    })\r\n    .then((response) => {\r\n      const userResponseMessage = response.value;\r\n      if (userResponseMessage)\r\n        addNewChatMessage(\r\n          userResponseMessage,\r\n          getCurrentTime(),\r\n          generateUniqueId(),\r\n          activeUser\r\n        );\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n};\r\n","import React, { useContext, useState } from 'react';\r\nimport { insertMarkText } from './helpers';\r\nimport { ChatContext } from '../context/MyContext';\r\n\r\nimport userIcon from '../static/images/user-icon.png';\r\n\r\nexport const Favourites = () => {\r\n  const data = useContext(ChatContext);\r\n  const [searchMessage, setSearchMessage] = useState('');\r\n\r\n  const searchInChatNames = (message) => {\r\n    const chatsElements = document.querySelectorAll('.userChats');\r\n\r\n    chatsElements.forEach((item) => {\r\n      const elem = item.childNodes[0];\r\n\r\n      const showElem = () => {\r\n        item.classList.remove('hide');\r\n        elem.innerHTML = elem.innerText;\r\n      };\r\n\r\n      const hideElem = () => {\r\n        item.classList.add('hide');\r\n        elem.innerHTML = elem.innerText;\r\n      };\r\n\r\n      if (message.trim() !== '') {\r\n        if (elem.innerText.toLowerCase().search(message.toLowerCase()) === -1)\r\n          hideElem();\r\n        else {\r\n          showElem();\r\n          elem.innerHTML = insertMarkText(\r\n            elem.innerText,\r\n            elem.innerText.toLowerCase().search(message.toLowerCase()),\r\n            message.length\r\n          );\r\n        }\r\n      } else showElem();\r\n    });\r\n  };\r\n\r\n  const onSearchChangeHandler = (e) => {\r\n    const val = e.target.value || '';\r\n    setSearchMessage(val);\r\n    searchInChatNames(val);\r\n  };\r\n\r\n  return (\r\n    <div className='favourites'>\r\n      <div className='pin-section'>\r\n        <div>\r\n          <img src={userIcon} alt='favourites users and chats' />\r\n          <p className='capitalize'>{data.currentUser}</p>\r\n        </div>\r\n      </div>\r\n      <div className='search-section'>\r\n        <label htmlFor='live_search'>search</label>\r\n        <input\r\n          value={searchMessage}\r\n          onChange={onSearchChangeHandler}\r\n          type='text'\r\n          id='live_search'\r\n        />\r\n        <button\r\n          className={searchMessage ? 'clear-btn' : 'clear-btn hidden'}\r\n          onClick={onSearchChangeHandler}\r\n        >\r\n          <span className='material-symbols-rounded'>cancel</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\nimport { ChatContext } from '../context/MyContext';\nimport {\n  lastMessageInArray,\n  dateTimeChatListFormatt,\n  upperCaseFirstLetter\n} from './helpers';\n\nexport const UsersChatList = () => {\n  const data = useContext(ChatContext);\n\n  return (\n    <div className='chats'>\n      <h2>Chats</h2>\n      <div className='userChatListDiv'>\n        <ul className='userChatList'>\n          {data.chatData.map(({ user, messages }) => (\n            <li\n              key={user}\n              className='userChats'\n              onClick={(e) => {\n                e.currentTarget.parentNode.childNodes.forEach((li) =>\n                  li.classList.remove('primary-color')\n                );\n                e.currentTarget.classList.add('primary-color');\n                data.setCurrentUser(user);\n              }}\n            >\n              <h4>{upperCaseFirstLetter(user)}</h4>\n              <p className='lastDialogData'>\n                {dateTimeChatListFormatt(lastMessageInArray(messages).time)}\n              </p>\n              <p className='lastDialogMessage capitalize'>\n                {lastMessageInArray(messages).author}:{' '}\n                {lastMessageInArray(messages).text.slice(0, 20)}...\n              </p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { ChatContext } from './context/MyContext';\n\nimport { DialogSection } from './components/DialogSection.jsx';\nimport { Favourites } from './components/FavouriteSection.jsx';\nimport { UsersChatList } from './components/UsersChatList.jsx';\n\nimport './App.css';\n\nconst App = () => {\n  const data = useContext(ChatContext);\n\n  return (\n    <div\n      className={\n        data.currentUser\n          ? 'main-container mobileUser'\n          : 'main-container mobileList'\n      }\n    >\n      <Favourites />\n      <DialogSection />\n      <UsersChatList />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport MyContext from './context/MyContext';\nimport App from './App';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <MyContext>\n      <App />\n    </MyContext>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}